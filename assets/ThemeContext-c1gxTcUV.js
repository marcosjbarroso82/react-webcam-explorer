import{a as s,p as l}from"./chunk-B7RQU5TL-FvSqzr6z.js";const i=s.createContext(void 0);function f({children:r}){const[m,o]=s.useState("light");s.useEffect(()=>{const e=localStorage.getItem("theme");if(e)o(e),a(e);else{const n=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";o(n),a(n)}},[]),s.useEffect(()=>{const e=window.matchMedia("(prefers-color-scheme: dark)"),t=n=>{if(!localStorage.getItem("theme")){const h=n.matches?"dark":"light";o(h),a(h)}};return e.addEventListener("change",t),()=>e.removeEventListener("change",t)},[]);const a=e=>{const t=document.documentElement;e==="dark"?t.classList.add("dark"):t.classList.remove("dark")},c=e=>{o(e),a(e),localStorage.setItem("theme",e)},d=()=>{c(m==="light"?"dark":"light")};return l.jsx(i.Provider,{value:{theme:m,toggleTheme:d,setTheme:c},children:r})}function g(){const r=s.useContext(i);if(r===void 0)throw new Error("useTheme must be used within a ThemeProvider");return r}export{f as T,g as u};
